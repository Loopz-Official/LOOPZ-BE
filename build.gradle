plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
    group = 'kr.co.loopz'
    version = '0.0.1-SNAPSHOT'
}

ext {
    springCloudVersion = "2024.0.1"
    queryDslVersion    = "5.0.0"
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

    // QueryDSL 세팅
    def querydslGenerated = layout.buildDirectory.dir("generated/querydsl").get().asFile
    sourceSets {
        main {
            java {
                srcDirs += querydslGenerated
            }
        }
    }

    dependencies {

        // spring
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // test
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // querydsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.0"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

        // mapstruct
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        // monitoring
        implementation 'io.micrometer:micrometer-registry-prometheus'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    // QueryDSL annotation processor 설정
    tasks.named('compileJava') {
        options.annotationProcessorGeneratedSourcesDirectory = file(querydslGenerated)
    }

}
