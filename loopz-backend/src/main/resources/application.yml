spring:
  profiles:
    include: local, jwt, oauth

  datasource:
    url: jdbc:postgresql://${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 800MB
#logging.level:
#  org.hibernate.SQL: debug

etc:
  base-url: ${BASE_URL}
  front-url: ${FRONT_URL}
  front-auth-success: ${FRONT_URL}/auth/success

jwt:
  expiration:
    access: ${ACCESS_EXPIRATION}
    refresh: ${REFRESH_EXPIRATION}
  secret: ${JWT_SECRET}
